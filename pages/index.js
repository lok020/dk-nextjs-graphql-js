// react
import { useEffect, useState } from 'react';

// nextjs
import Head from 'next/head';
import Link from 'next/link';
import { useRouter } from 'next/router';

// css
import styles from '../styles/Home.module.scss';

// graphql
import graphql_client from '../graphql/client';
import { INIT } from '../graphql/queries';

// fetch and get all books
export async function getStaticProps () {
  const data = await graphql_client.request(INIT);

  return {
    props: { data }
  }
}

export default function Home({data}) {
  const [book, setBook] = useState("");                             // the input for search bar
  const [recommend, setRecommend] = useState(false);                // a flag to show recommend list or not
  const [recommend_list, setRecommendList] = useState([]);          // the recommend list depend on recommend to show
  const router = useRouter();

  // update input keys, and update the recommend list
  const handleInputChange = (e) => {
    let input = e.target.value;
    setBook(input);
    if (input === "") setRecommendList([]);     // empty out recommend list if user didn't type anything in
    else if (input !== "") {
      // find all matches, set recommend list
      let found = data.books.filter(book => book.title.toLowerCase().includes(input.toLowerCase()) || book.isbn.includes(input));
      setRecommendList(found);
    }
  }

  // show recommend list onBlur on input
  const handleInputOnFocus = () => {
    setRecommend(true);
  }

  // hide recommend list onBlur on input
  const handleInputOnBlur = () => {
    setRecommend(false);
  }

  // hand selection from the recommend list
  const handleRecommendSelect = (e) => {
    router.push("/books/" + e.target.id);     // re route
  }
  
  // handle enter from user keyboard, which also call handleSearch function
  const handleEnterKey = (e) => {
    if (e.key === 'Enter') handleSearch();
  }

  // route to the first one from the recommend list
  const handleSearch = () => {
    if (recommend_list.length > 0) router.push("/books/" + recommend_list[0].id);       // re route
    else if (recommend_list.length <= 0) alert("No books are found with the input");    // show alert
  }

  // play sound, for accessibility
  const playSound = () => {
    let sound = document.getElementById("myClick");
    sound.play();
  }
  
  return (
    <>
      <audio id={"myClick"}>
        <source src="/audio/hint.mp3" type="audio/mp3" />
      </audio>
      <Head>
        <title>Create Next App - by Wai Lok Cheng</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.container}>
        <img src="/image/dk.png" alt="DK Logo"/>
        <div className={styles.searchbar}>
          <input type="text" placeholder='Search a book here...' value={book} data-testid="search_bar"
          onChange={handleInputChange} onFocus={handleInputOnFocus} onBlur={handleInputOnBlur}
          onKeyDown={handleEnterKey} />
          {recommend && recommend_list.length > 0 && (
            <div className={styles.recommend} data-testid="recommend">
              {recommend_list.map(({id, isbn, title}) => (
                <div key={id} id={id} className={styles.selection} onMouseDown={handleRecommendSelect}>
                  <p id={id}>{`${isbn}   -   ${title}`}</p>
                </div>
              ))}
            </div>
          )}
        </div>
        <div>
          <button data-testid="search" className={styles.button_search_all} onClick={() => {playSound();handleSearch();}}>Search</button>
          <Link href={"/books"}>
            <button data-testid="view_all" className={styles.button_search_all} onMouseDown={() => playSound()}>View all books</button>
          </Link>
        </div>
      </main>
    </>
  )
}